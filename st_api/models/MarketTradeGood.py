# generated by datamodel-codegen:
#   filename:  api-docs/models/MarketTradeGood.json
#   timestamp: 2023-10-21T17:38:30+00:00

from __future__ import annotations

from pydantic import BaseModel, Field, conint
from typing_extensions import Literal


class MarketTradeGood(BaseModel):
    symbol: str = Field(..., description='The symbol of the trade good.')
    tradeVolume: conint(ge=1) = Field(
        ...,
        description='The typical volume flowing through the market for this type of good. The larger the trade volume, the more stable prices will be.',
    )
    supply: Literal['SCARCE', 'LIMITED', 'MODERATE', 'ABUNDANT'] = Field(
        ...,
        description='A rough estimate of the total supply of this good in the marketplace.',
    )
    purchasePrice: conint(ge=0) = Field(
        ...,
        description='The price at which this good can be purchased from the market.',
    )
    sellPrice: conint(ge=0) = Field(
        ..., description='The price at which this good can be sold to the market.'
    )
