# generated by datamodel-codegen:
#   filename:  api-docs/models/MarketTradeGood.json
#   timestamp: 2023-10-15T19:00:16+00:00

from __future__ import annotations

from enum import Enum

from pydantic import BaseModel, Field, conint


class Supply(Enum):
    SCARCE = "SCARCE"
    LIMITED = "LIMITED"
    MODERATE = "MODERATE"
    ABUNDANT = "ABUNDANT"


class MarketTradeGood(BaseModel):
    symbol: str = Field(..., description="The symbol of the trade good.")
    tradeVolume: conint(ge=1) = Field(
        ...,
        description="The typical volume flowing through the market for this type of good. The larger the trade volume, the more stable prices will be.",
    )
    supply: Supply = Field(
        ...,
        description="A rough estimate of the total supply of this good in the marketplace.",
    )
    purchasePrice: conint(ge=0) = Field(
        ...,
        description="The price at which this good can be purchased from the market.",
    )
    sellPrice: conint(ge=0) = Field(
        ..., description="The price at which this good can be sold to the market."
    )
