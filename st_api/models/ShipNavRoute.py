# generated by datamodel-codegen:
#   filename:  api-docs/models/ShipNavRoute.json
#   timestamp: 2023-10-15T19:00:17+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum

from pydantic import BaseModel, Field, constr


class WaypointType(Enum):
    PLANET = "PLANET"
    GAS_GIANT = "GAS_GIANT"
    MOON = "MOON"
    ORBITAL_STATION = "ORBITAL_STATION"
    JUMP_GATE = "JUMP_GATE"
    ASTEROID_FIELD = "ASTEROID_FIELD"
    NEBULA = "NEBULA"
    DEBRIS_FIELD = "DEBRIS_FIELD"
    GRAVITY_WELL = "GRAVITY_WELL"


class ShipNavRouteWaypoint(BaseModel):
    symbol: constr(min_length=1) = Field(..., description="The symbol of the waypoint.")
    type: WaypointType
    systemSymbol: constr(min_length=1) = Field(
        ..., description="The symbol of the system the waypoint is in."
    )
    x: int = Field(..., description="Position in the universe in the x axis.")
    y: int = Field(..., description="Position in the universe in the y axis.")


class ShipNavRoute(BaseModel):
    destination: ShipNavRouteWaypoint
    departure: ShipNavRouteWaypoint = Field(
        ..., description="Deprecated. Use origin instead."
    )
    origin: ShipNavRouteWaypoint
    departureTime: datetime = Field(
        ..., description="The date time of the ship's departure."
    )
    arrival: datetime = Field(
        ...,
        description="The date time of the ship's arrival. If the ship is in-transit, this is the expected time of arrival.",
    )
