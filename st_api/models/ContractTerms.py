# generated by datamodel-codegen:
#   filename:  api-docs/models/ContractTerms.json
#   timestamp: 2023-10-15T19:00:16+00:00

from __future__ import annotations

from datetime import datetime
from typing import List, Optional

from pydantic import BaseModel, Field, constr


class ContractPayment(BaseModel):
    onAccepted: int = Field(
        ...,
        description="The amount of credits received up front for accepting the contract.",
    )
    onFulfilled: int = Field(
        ...,
        description="The amount of credits received when the contract is fulfilled.",
    )


class ContractDeliverGood(BaseModel):
    tradeSymbol: constr(min_length=1) = Field(
        ..., description="The symbol of the trade good to deliver."
    )
    destinationSymbol: constr(min_length=1) = Field(
        ..., description="The destination where goods need to be delivered."
    )
    unitsRequired: int = Field(
        ...,
        description="The number of units that need to be delivered on this contract.",
    )
    unitsFulfilled: int = Field(
        ..., description="The number of units fulfilled on this contract."
    )


class ContractTerms(BaseModel):
    deadline: datetime = Field(..., description="The deadline for the contract.")
    payment: ContractPayment = Field(..., description="Payments for the contract.")
    deliver: Optional[List[ContractDeliverGood]] = Field(
        None,
        description="The cargo that needs to be delivered to fulfill the contract.",
    )
